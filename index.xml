<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hexya</title>
    <link>/</link>
    <description>Recent content on Hexya</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Nov 2018 14:31:36 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design</title>
      <link>/docs/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/design/</guid>
      <description>This document explains the design choices of Hexya, including the reason why we decided to write Hexya in the first place.
   1. Introduction We used Odoo (http://www.odoo.com) for a few years to fulfil our customers need of business applications. We are great fans of Odoo and managed to create applications for very different businesses, from a 2 people service company to a 500 industrial company.
 However, if Odoo is perfectly fitted for small and medium businesses it does not scale well for bigger companies.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>/docs/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/install/</guid>
      <description>Table of Contents 1. Introduction 2. Prerequisites 2.1. Install Go 2.2. Install lessc   3. Download 3.1. Download Hexya   4. Create a project 4.1. Download Demo Project 4.2. Creating a custom project 4.3. Generate Hexya   5. Synchronise database 5.1. Setup Postgresql 5.2. Synchronise database schema with models   6. Running Hexya   1. Introduction Since Hexya is a modular ERP at compile time, it is only distributed as source code.</description>
    </item>
    
    <item>
      <title>Second Technology Preview</title>
      <link>/blog/preview2/</link>
      <pubDate>Sat, 17 Nov 2018 14:31:36 +0100</pubDate>
      
      <guid>/blog/preview2/</guid>
      <description>It&amp;rsquo;s been a long time since we released our first technology preview back in January. But actually, behind the scene, a lot of work has been done since then.
By playing with the new demo, you will certainly notice the new UI theme and a few improvements here and there. But the main part of the work has been on the core of Hexya, which, sadly, cannot be seen on the demo itself.</description>
    </item>
    
    <item>
      <title>First Technology Preview</title>
      <link>/blog/demo/</link>
      <pubDate>Sun, 28 Jan 2018 10:00:00 +0200</pubDate>
      
      <guid>/blog/demo/</guid>
      <description>Our first technology preview of Hexya is online at https://demo.hexya.io after almost two years of work.
It is a quick port of Odoo&amp;rsquo;s sale module with its main dependencies on Hexya&amp;rsquo;s framework. The purpose of this preview is to show how several independent modules interact to build the whole application. So do not expect business features to work seamlessly. In particular, the accounting module has only been scaffolded with all its models, views and menus, but none of the functions have been implemented.</description>
    </item>
    
    <item>
      <title>Why we chose Go for Hexya</title>
      <link>/blog/why-go/</link>
      <pubDate>Mon, 28 Aug 2017 20:00:00 +0200</pubDate>
      
      <guid>/blog/why-go/</guid>
      <description>Origin of Hexya As explained in our design doc, Hexya is a rewrite of Odoo. At the beginning of 2016, a guy who participate in a personnal project written in Python asked me if I ever heard about Go. I didn&amp;rsquo;t, so I went to Go&amp;rsquo;s website and read &amp;ldquo;Go is an attempt to combine the ease of programming of an interpreted, dynamically typed language with the efficiency and safety of a statically typed, compiled language&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>A Homepage for Hexya</title>
      <link>/blog/welcome/</link>
      <pubDate>Tue, 08 Aug 2017 10:00:00 +0200</pubDate>
      
      <guid>/blog/welcome/</guid>
      <description>Welcome to Hexya! Hexya&amp;rsquo;s development started in February 2016 with the idea to create a business application develpment framework that would have the same unique modularity concept as Odoo, but would also:
 Be much faster and allow for heavier business computation loads Provide developer friendly API, in particular the ability to have autocompletion  Today, we have implemented almost all targeted features of the framework, including the unique models, views and controllers iterative declaration principle.</description>
    </item>
    
    <item>
      <title>Module Development Tutorial</title>
      <link>/docs/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/tutorial/</guid>
      <description>Table of Contents 1. Prerequisites 2. Start/Stop the Hexya server 3. Build an Hexya module 3.1. Composition of a module 3.2. Module structure   4. Object-Relational Mapping 4.1. Models 4.2. Code generation 4.3. Model fields   5. Resource files 5.1. Actions 5.2. Menus 5.3. Views   6. Basic views 6.1. Generic view declaration 6.2. Form views 6.3. Search views   7. Synchronising the database and starting the server 8.</description>
    </item>
    
    <item>
      <title>Models Reference</title>
      <link>/docs/models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/models/</guid>
      <description>Table of Contents 1. Introduction 2. RecordSets 2.1. Records and RecordSets types 2.2. Using RecordSets 2.3. Common RecordSet Methods   3. Environment 3.1. Environment Methods 3.2. Context Methods 3.3. Executing in a new Environment 3.4. Modifying the Environment 3.5. Direct Database Access   4. Creating / extending models 4.1. Creating a new model 4.2. Fields declaration 4.3. Defining methods 4.4. Extending a model   5. Sequences   1.</description>
    </item>
    
    <item>
      <title>Security Reference</title>
      <link>/docs/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/security/</guid>
      <description>Table of Contents 1. Introduction 1.1. Groups 1.2. Mechanisms 1.3. Permissions   2. Method Execution Control (MEC) 2.1. Rationale 2.2. Defining Method Execution Permissions   3. Record Rules (RR) 3.1. Definition 3.2. Adding or removing Record Rules 3.3. Record Rules combination     1. Introduction Security is implemented in Hexya at the ORM level to limit the risks of inappropriate privilege elevation.
 1.1. Groups It is based on the concept of group:</description>
    </item>
    
    <item>
      <title>Internationalization Reference</title>
      <link>/docs/i18n/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/i18n/</guid>
      <description>Table of Contents 1. Introduction 1.1. Available languages   2. Application translation 2.1. Define what needs to be translated 2.2. Extract the PO files 2.3. Translate the strings 2.4. Load back the translation   3. Displaying according to user&amp;#8217;s locale 4. Translating record data   1. Introduction Internationalization in Hexya groups several aspects:
   Translating the application so that the user sees the user interface in his own language.</description>
    </item>
    
    <item>
      <title>Data Reference</title>
      <link>/docs/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/data/</guid>
      <description>Table of Contents 1. Introduction 2. CSV Files 3. Versions 4. Examples   1. Introduction Hexya framework provides a way to load user space data directly into the database through the use of CSV files.
 Hexya manages two kinds of data:
   Configuration data needed for the logic to work. They are always loaded.
  Demo data needed either for evaluating the module or for use as test data.</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/faq/</link>
      <pubDate>Thu, 15 Jun 2017 21:58:26 +0200</pubDate>
      
      <guid>/faq/</guid>
      <description>General What is Hexya exactly? Hexya is both a business application development framework and an ERP built with this framework. See also our Design documentation page.
What is the target audience? With its modular and extensible approach, Hexya can address the need of all companies, whatever their business.
Because an ERP involves many aspects from software development to change management through business process assessment, we believe that ERP projects should be led by IT specialists.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description> Contact us </description>
    </item>
    
  </channel>
</rss>