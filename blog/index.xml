<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Hexya</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Hexya</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2017 23:00:00 +0200</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why we chose Go for Hexya</title>
      <link>/blog/why-go/</link>
      <pubDate>Mon, 28 Aug 2017 23:00:00 +0200</pubDate>
      
      <guid>/blog/why-go/</guid>
      <description>Origin of Hexya As explained in our design doc, Hexya is a rewrite of Odoo. At the beginning of 2016, a guy who participate in a personnal project written in Python asked me if I ever heard about Go. I didn&amp;rsquo;t, so I went to Go&amp;rsquo;s website and read &amp;ldquo;Go is an attempt to combine the ease of programming of an interpreted, dynamically typed language with the efficiency and safety of a statically typed, compiled language&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>A Homepage for Hexya</title>
      <link>/blog/welcome/</link>
      <pubDate>Tue, 08 Aug 2017 10:00:00 +0200</pubDate>
      
      <guid>/blog/welcome/</guid>
      <description>Welcome to Hexya! Hexya&amp;rsquo;s development started in February 2016 with the idea to create a business application develpment framework that would have the same unique modularity concept as Odoo, but would also:
 Be much faster and allow for heavier business computation loads Provide developer friendly API, in particular the ability to have autocompletion  Today, we have implemented almost all targeted features of the framework, including the unique models, views and controllers iterative declaration principle.</description>
    </item>
    
  </channel>
</rss>